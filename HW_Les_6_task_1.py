# Предлагаю проанализировать задачу №3 из урока №2
# Сформировать из введенного числа обратное по порядку входящих в него цифр и вывести на экран

import sys

######################################################

itm = '56908543834537386932'
res = ''
for i in itm:
    res = i + res

mem_value = (sys.getsizeof(itm) + sys.getsizeof(res) + sys.getsizeof(
    len(itm) - 1))  # значение в последней переменной добавляется из цикла for, последнее значение после обхода itm
print(f'Размер переменных {mem_value} байт.')

#######################################################
#
# itm = '56908543834537386932'
# res = itm[::-1]
#
# mem_value = (sys.getsizeof(itm) + sys.getsizeof(res))
# print(f'Размер переменных {mem_value} байт.')
#
#######################################################
# val1 = '56908543834537386932'
#
#
# def turn2(itm):
#     return itm[::-1]
#
#
# val2 = turn2(val1)
#
# mem_value = (sys.getsizeof(val1) + sys.getsizeof(val2))
# print(f'Размер переменных {mem_value} байт.')
#
#
#######################################################
#
# itm = 56908543834537386932
# res = 0
# while itm > 0:
#     res = res * 10 + itm % 10
#     itm = itm // 10
#
# mem_value = (sys.getsizeof(itm) + sys.getsizeof(res))
#
# print(f'Размер переменных {mem_value} байт.')
#
#######################################################
# Результаты вычислений:
# Размер переменных 104 байт.
# Размер переменных 90 байт.
# Размер переменных 90 байт.
# Размер переменных 34 байт.

# Самым затратным по использованию памяти оказался первый способ с использованием цикла for. После обхода
# последовательности у нас в памяти остается значение переменной i. Минимальные затраты памяти потребовались на
# последний способ.

# Python 3.7.1 (v3.7.1:260ec2c36a, Oct 20 2018, 14:05:16) [MSC v.1915 32 bit (Intel)] on win32
#



